// Code generated by go-swagger; DO NOT EDIT.

package lss_config_controller_v_2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateLssUsingPUT3Reader is a Reader for the UpdateLssUsingPUT3 structure.
type UpdateLssUsingPUT3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLssUsingPUT3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateLssUsingPUT3Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateLssUsingPUT3NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateLssUsingPUT3BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateLssUsingPUT3Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateLssUsingPUT3Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateLssUsingPUT3NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateLssUsingPUT3TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateLssUsingPUT3Created creates a UpdateLssUsingPUT3Created with default headers values
func NewUpdateLssUsingPUT3Created() *UpdateLssUsingPUT3Created {
	return &UpdateLssUsingPUT3Created{}
}

/* UpdateLssUsingPUT3Created describes a response with status code 201, with default header values.

Created
*/
type UpdateLssUsingPUT3Created struct {
}

func (o *UpdateLssUsingPUT3Created) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v2/admin/customers/{customerId}/lssConfig/{lssId}][%d] updateLssUsingPUT3Created ", 201)
}

func (o *UpdateLssUsingPUT3Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLssUsingPUT3NoContent creates a UpdateLssUsingPUT3NoContent with default headers values
func NewUpdateLssUsingPUT3NoContent() *UpdateLssUsingPUT3NoContent {
	return &UpdateLssUsingPUT3NoContent{}
}

/* UpdateLssUsingPUT3NoContent describes a response with status code 204, with default header values.

No Content
*/
type UpdateLssUsingPUT3NoContent struct {
}

func (o *UpdateLssUsingPUT3NoContent) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v2/admin/customers/{customerId}/lssConfig/{lssId}][%d] updateLssUsingPUT3NoContent ", 204)
}

func (o *UpdateLssUsingPUT3NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLssUsingPUT3BadRequest creates a UpdateLssUsingPUT3BadRequest with default headers values
func NewUpdateLssUsingPUT3BadRequest() *UpdateLssUsingPUT3BadRequest {
	return &UpdateLssUsingPUT3BadRequest{}
}

/* UpdateLssUsingPUT3BadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type UpdateLssUsingPUT3BadRequest struct {
}

func (o *UpdateLssUsingPUT3BadRequest) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v2/admin/customers/{customerId}/lssConfig/{lssId}][%d] updateLssUsingPUT3BadRequest ", 400)
}

func (o *UpdateLssUsingPUT3BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLssUsingPUT3Unauthorized creates a UpdateLssUsingPUT3Unauthorized with default headers values
func NewUpdateLssUsingPUT3Unauthorized() *UpdateLssUsingPUT3Unauthorized {
	return &UpdateLssUsingPUT3Unauthorized{}
}

/* UpdateLssUsingPUT3Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateLssUsingPUT3Unauthorized struct {
}

func (o *UpdateLssUsingPUT3Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v2/admin/customers/{customerId}/lssConfig/{lssId}][%d] updateLssUsingPUT3Unauthorized ", 401)
}

func (o *UpdateLssUsingPUT3Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLssUsingPUT3Forbidden creates a UpdateLssUsingPUT3Forbidden with default headers values
func NewUpdateLssUsingPUT3Forbidden() *UpdateLssUsingPUT3Forbidden {
	return &UpdateLssUsingPUT3Forbidden{}
}

/* UpdateLssUsingPUT3Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateLssUsingPUT3Forbidden struct {
}

func (o *UpdateLssUsingPUT3Forbidden) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v2/admin/customers/{customerId}/lssConfig/{lssId}][%d] updateLssUsingPUT3Forbidden ", 403)
}

func (o *UpdateLssUsingPUT3Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLssUsingPUT3NotFound creates a UpdateLssUsingPUT3NotFound with default headers values
func NewUpdateLssUsingPUT3NotFound() *UpdateLssUsingPUT3NotFound {
	return &UpdateLssUsingPUT3NotFound{}
}

/* UpdateLssUsingPUT3NotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateLssUsingPUT3NotFound struct {
}

func (o *UpdateLssUsingPUT3NotFound) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v2/admin/customers/{customerId}/lssConfig/{lssId}][%d] updateLssUsingPUT3NotFound ", 404)
}

func (o *UpdateLssUsingPUT3NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLssUsingPUT3TooManyRequests creates a UpdateLssUsingPUT3TooManyRequests with default headers values
func NewUpdateLssUsingPUT3TooManyRequests() *UpdateLssUsingPUT3TooManyRequests {
	return &UpdateLssUsingPUT3TooManyRequests{}
}

/* UpdateLssUsingPUT3TooManyRequests describes a response with status code 429, with default header values.

TooManyRequest
*/
type UpdateLssUsingPUT3TooManyRequests struct {
}

func (o *UpdateLssUsingPUT3TooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v2/admin/customers/{customerId}/lssConfig/{lssId}][%d] updateLssUsingPUT3TooManyRequests ", 429)
}

func (o *UpdateLssUsingPUT3TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
