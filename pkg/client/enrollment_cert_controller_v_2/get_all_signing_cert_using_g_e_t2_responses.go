// Code generated by go-swagger; DO NOT EDIT.

package enrollment_cert_controller_v_2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haarchri/zpa-go-client/pkg/models"
)

// GetAllSigningCertUsingGET2Reader is a Reader for the GetAllSigningCertUsingGET2 structure.
type GetAllSigningCertUsingGET2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllSigningCertUsingGET2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllSigningCertUsingGET2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllSigningCertUsingGET2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAllSigningCertUsingGET2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllSigningCertUsingGET2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllSigningCertUsingGET2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAllSigningCertUsingGET2TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllSigningCertUsingGET2OK creates a GetAllSigningCertUsingGET2OK with default headers values
func NewGetAllSigningCertUsingGET2OK() *GetAllSigningCertUsingGET2OK {
	return &GetAllSigningCertUsingGET2OK{}
}

/* GetAllSigningCertUsingGET2OK describes a response with status code 200, with default header values.

OK
*/
type GetAllSigningCertUsingGET2OK struct {
	Payload *models.PageListOfEnrollmentCert
}

func (o *GetAllSigningCertUsingGET2OK) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v2/admin/customers/{customerId}/enrollmentCert][%d] getAllSigningCertUsingGET2OK  %+v", 200, o.Payload)
}
func (o *GetAllSigningCertUsingGET2OK) GetPayload() *models.PageListOfEnrollmentCert {
	return o.Payload
}

func (o *GetAllSigningCertUsingGET2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageListOfEnrollmentCert)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSigningCertUsingGET2BadRequest creates a GetAllSigningCertUsingGET2BadRequest with default headers values
func NewGetAllSigningCertUsingGET2BadRequest() *GetAllSigningCertUsingGET2BadRequest {
	return &GetAllSigningCertUsingGET2BadRequest{}
}

/* GetAllSigningCertUsingGET2BadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type GetAllSigningCertUsingGET2BadRequest struct {
}

func (o *GetAllSigningCertUsingGET2BadRequest) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v2/admin/customers/{customerId}/enrollmentCert][%d] getAllSigningCertUsingGET2BadRequest ", 400)
}

func (o *GetAllSigningCertUsingGET2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSigningCertUsingGET2Unauthorized creates a GetAllSigningCertUsingGET2Unauthorized with default headers values
func NewGetAllSigningCertUsingGET2Unauthorized() *GetAllSigningCertUsingGET2Unauthorized {
	return &GetAllSigningCertUsingGET2Unauthorized{}
}

/* GetAllSigningCertUsingGET2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllSigningCertUsingGET2Unauthorized struct {
}

func (o *GetAllSigningCertUsingGET2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v2/admin/customers/{customerId}/enrollmentCert][%d] getAllSigningCertUsingGET2Unauthorized ", 401)
}

func (o *GetAllSigningCertUsingGET2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSigningCertUsingGET2Forbidden creates a GetAllSigningCertUsingGET2Forbidden with default headers values
func NewGetAllSigningCertUsingGET2Forbidden() *GetAllSigningCertUsingGET2Forbidden {
	return &GetAllSigningCertUsingGET2Forbidden{}
}

/* GetAllSigningCertUsingGET2Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllSigningCertUsingGET2Forbidden struct {
}

func (o *GetAllSigningCertUsingGET2Forbidden) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v2/admin/customers/{customerId}/enrollmentCert][%d] getAllSigningCertUsingGET2Forbidden ", 403)
}

func (o *GetAllSigningCertUsingGET2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSigningCertUsingGET2NotFound creates a GetAllSigningCertUsingGET2NotFound with default headers values
func NewGetAllSigningCertUsingGET2NotFound() *GetAllSigningCertUsingGET2NotFound {
	return &GetAllSigningCertUsingGET2NotFound{}
}

/* GetAllSigningCertUsingGET2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllSigningCertUsingGET2NotFound struct {
}

func (o *GetAllSigningCertUsingGET2NotFound) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v2/admin/customers/{customerId}/enrollmentCert][%d] getAllSigningCertUsingGET2NotFound ", 404)
}

func (o *GetAllSigningCertUsingGET2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSigningCertUsingGET2TooManyRequests creates a GetAllSigningCertUsingGET2TooManyRequests with default headers values
func NewGetAllSigningCertUsingGET2TooManyRequests() *GetAllSigningCertUsingGET2TooManyRequests {
	return &GetAllSigningCertUsingGET2TooManyRequests{}
}

/* GetAllSigningCertUsingGET2TooManyRequests describes a response with status code 429, with default header values.

TooManyRequest
*/
type GetAllSigningCertUsingGET2TooManyRequests struct {
}

func (o *GetAllSigningCertUsingGET2TooManyRequests) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v2/admin/customers/{customerId}/enrollmentCert][%d] getAllSigningCertUsingGET2TooManyRequests ", 429)
}

func (o *GetAllSigningCertUsingGET2TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
