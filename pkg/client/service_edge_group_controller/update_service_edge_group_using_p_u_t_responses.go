// Code generated by go-swagger; DO NOT EDIT.

package service_edge_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateServiceEdgeGroupUsingPUTReader is a Reader for the UpdateServiceEdgeGroupUsingPUT structure.
type UpdateServiceEdgeGroupUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceEdgeGroupUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateServiceEdgeGroupUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateServiceEdgeGroupUsingPUTNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServiceEdgeGroupUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateServiceEdgeGroupUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateServiceEdgeGroupUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateServiceEdgeGroupUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateServiceEdgeGroupUsingPUTTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateServiceEdgeGroupUsingPUTCreated creates a UpdateServiceEdgeGroupUsingPUTCreated with default headers values
func NewUpdateServiceEdgeGroupUsingPUTCreated() *UpdateServiceEdgeGroupUsingPUTCreated {
	return &UpdateServiceEdgeGroupUsingPUTCreated{}
}

/* UpdateServiceEdgeGroupUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateServiceEdgeGroupUsingPUTCreated struct {
}

func (o *UpdateServiceEdgeGroupUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/serviceEdgeGroup/{serviceEdgeGroupId}][%d] updateServiceEdgeGroupUsingPUTCreated ", 201)
}

func (o *UpdateServiceEdgeGroupUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceEdgeGroupUsingPUTNoContent creates a UpdateServiceEdgeGroupUsingPUTNoContent with default headers values
func NewUpdateServiceEdgeGroupUsingPUTNoContent() *UpdateServiceEdgeGroupUsingPUTNoContent {
	return &UpdateServiceEdgeGroupUsingPUTNoContent{}
}

/* UpdateServiceEdgeGroupUsingPUTNoContent describes a response with status code 204, with default header values.

No Content
*/
type UpdateServiceEdgeGroupUsingPUTNoContent struct {
}

func (o *UpdateServiceEdgeGroupUsingPUTNoContent) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/serviceEdgeGroup/{serviceEdgeGroupId}][%d] updateServiceEdgeGroupUsingPUTNoContent ", 204)
}

func (o *UpdateServiceEdgeGroupUsingPUTNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceEdgeGroupUsingPUTBadRequest creates a UpdateServiceEdgeGroupUsingPUTBadRequest with default headers values
func NewUpdateServiceEdgeGroupUsingPUTBadRequest() *UpdateServiceEdgeGroupUsingPUTBadRequest {
	return &UpdateServiceEdgeGroupUsingPUTBadRequest{}
}

/* UpdateServiceEdgeGroupUsingPUTBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type UpdateServiceEdgeGroupUsingPUTBadRequest struct {
}

func (o *UpdateServiceEdgeGroupUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/serviceEdgeGroup/{serviceEdgeGroupId}][%d] updateServiceEdgeGroupUsingPUTBadRequest ", 400)
}

func (o *UpdateServiceEdgeGroupUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceEdgeGroupUsingPUTUnauthorized creates a UpdateServiceEdgeGroupUsingPUTUnauthorized with default headers values
func NewUpdateServiceEdgeGroupUsingPUTUnauthorized() *UpdateServiceEdgeGroupUsingPUTUnauthorized {
	return &UpdateServiceEdgeGroupUsingPUTUnauthorized{}
}

/* UpdateServiceEdgeGroupUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateServiceEdgeGroupUsingPUTUnauthorized struct {
}

func (o *UpdateServiceEdgeGroupUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/serviceEdgeGroup/{serviceEdgeGroupId}][%d] updateServiceEdgeGroupUsingPUTUnauthorized ", 401)
}

func (o *UpdateServiceEdgeGroupUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceEdgeGroupUsingPUTForbidden creates a UpdateServiceEdgeGroupUsingPUTForbidden with default headers values
func NewUpdateServiceEdgeGroupUsingPUTForbidden() *UpdateServiceEdgeGroupUsingPUTForbidden {
	return &UpdateServiceEdgeGroupUsingPUTForbidden{}
}

/* UpdateServiceEdgeGroupUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateServiceEdgeGroupUsingPUTForbidden struct {
}

func (o *UpdateServiceEdgeGroupUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/serviceEdgeGroup/{serviceEdgeGroupId}][%d] updateServiceEdgeGroupUsingPUTForbidden ", 403)
}

func (o *UpdateServiceEdgeGroupUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceEdgeGroupUsingPUTNotFound creates a UpdateServiceEdgeGroupUsingPUTNotFound with default headers values
func NewUpdateServiceEdgeGroupUsingPUTNotFound() *UpdateServiceEdgeGroupUsingPUTNotFound {
	return &UpdateServiceEdgeGroupUsingPUTNotFound{}
}

/* UpdateServiceEdgeGroupUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateServiceEdgeGroupUsingPUTNotFound struct {
}

func (o *UpdateServiceEdgeGroupUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/serviceEdgeGroup/{serviceEdgeGroupId}][%d] updateServiceEdgeGroupUsingPUTNotFound ", 404)
}

func (o *UpdateServiceEdgeGroupUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServiceEdgeGroupUsingPUTTooManyRequests creates a UpdateServiceEdgeGroupUsingPUTTooManyRequests with default headers values
func NewUpdateServiceEdgeGroupUsingPUTTooManyRequests() *UpdateServiceEdgeGroupUsingPUTTooManyRequests {
	return &UpdateServiceEdgeGroupUsingPUTTooManyRequests{}
}

/* UpdateServiceEdgeGroupUsingPUTTooManyRequests describes a response with status code 429, with default header values.

TooManyRequest
*/
type UpdateServiceEdgeGroupUsingPUTTooManyRequests struct {
}

func (o *UpdateServiceEdgeGroupUsingPUTTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/serviceEdgeGroup/{serviceEdgeGroupId}][%d] updateServiceEdgeGroupUsingPUTTooManyRequests ", 429)
}

func (o *UpdateServiceEdgeGroupUsingPUTTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
