// Code generated by go-swagger; DO NOT EDIT.

package policy_set_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateRuleToPolicySetUsingPUT1Reader is a Reader for the UpdateRuleToPolicySetUsingPUT1 structure.
type UpdateRuleToPolicySetUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRuleToPolicySetUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateRuleToPolicySetUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateRuleToPolicySetUsingPUT1NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRuleToPolicySetUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRuleToPolicySetUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRuleToPolicySetUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRuleToPolicySetUsingPUT1Created creates a UpdateRuleToPolicySetUsingPUT1Created with default headers values
func NewUpdateRuleToPolicySetUsingPUT1Created() *UpdateRuleToPolicySetUsingPUT1Created {
	return &UpdateRuleToPolicySetUsingPUT1Created{}
}

/* UpdateRuleToPolicySetUsingPUT1Created describes a response with status code 201, with default header values.

Created
*/
type UpdateRuleToPolicySetUsingPUT1Created struct {
}

func (o *UpdateRuleToPolicySetUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/policySet/{policySetId}/rule/{ruleId}][%d] updateRuleToPolicySetUsingPUT1Created ", 201)
}

func (o *UpdateRuleToPolicySetUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRuleToPolicySetUsingPUT1NoContent creates a UpdateRuleToPolicySetUsingPUT1NoContent with default headers values
func NewUpdateRuleToPolicySetUsingPUT1NoContent() *UpdateRuleToPolicySetUsingPUT1NoContent {
	return &UpdateRuleToPolicySetUsingPUT1NoContent{}
}

/* UpdateRuleToPolicySetUsingPUT1NoContent describes a response with status code 204, with default header values.

No Content
*/
type UpdateRuleToPolicySetUsingPUT1NoContent struct {
}

func (o *UpdateRuleToPolicySetUsingPUT1NoContent) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/policySet/{policySetId}/rule/{ruleId}][%d] updateRuleToPolicySetUsingPUT1NoContent ", 204)
}

func (o *UpdateRuleToPolicySetUsingPUT1NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRuleToPolicySetUsingPUT1Unauthorized creates a UpdateRuleToPolicySetUsingPUT1Unauthorized with default headers values
func NewUpdateRuleToPolicySetUsingPUT1Unauthorized() *UpdateRuleToPolicySetUsingPUT1Unauthorized {
	return &UpdateRuleToPolicySetUsingPUT1Unauthorized{}
}

/* UpdateRuleToPolicySetUsingPUT1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateRuleToPolicySetUsingPUT1Unauthorized struct {
}

func (o *UpdateRuleToPolicySetUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/policySet/{policySetId}/rule/{ruleId}][%d] updateRuleToPolicySetUsingPUT1Unauthorized ", 401)
}

func (o *UpdateRuleToPolicySetUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRuleToPolicySetUsingPUT1Forbidden creates a UpdateRuleToPolicySetUsingPUT1Forbidden with default headers values
func NewUpdateRuleToPolicySetUsingPUT1Forbidden() *UpdateRuleToPolicySetUsingPUT1Forbidden {
	return &UpdateRuleToPolicySetUsingPUT1Forbidden{}
}

/* UpdateRuleToPolicySetUsingPUT1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateRuleToPolicySetUsingPUT1Forbidden struct {
}

func (o *UpdateRuleToPolicySetUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/policySet/{policySetId}/rule/{ruleId}][%d] updateRuleToPolicySetUsingPUT1Forbidden ", 403)
}

func (o *UpdateRuleToPolicySetUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRuleToPolicySetUsingPUT1NotFound creates a UpdateRuleToPolicySetUsingPUT1NotFound with default headers values
func NewUpdateRuleToPolicySetUsingPUT1NotFound() *UpdateRuleToPolicySetUsingPUT1NotFound {
	return &UpdateRuleToPolicySetUsingPUT1NotFound{}
}

/* UpdateRuleToPolicySetUsingPUT1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateRuleToPolicySetUsingPUT1NotFound struct {
}

func (o *UpdateRuleToPolicySetUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/policySet/{policySetId}/rule/{ruleId}][%d] updateRuleToPolicySetUsingPUT1NotFound ", 404)
}

func (o *UpdateRuleToPolicySetUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
