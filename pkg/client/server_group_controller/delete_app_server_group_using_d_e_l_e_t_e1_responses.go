// Code generated by go-swagger; DO NOT EDIT.

package server_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteAppServerGroupUsingDELETE1Reader is a Reader for the DeleteAppServerGroupUsingDELETE1 structure.
type DeleteAppServerGroupUsingDELETE1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAppServerGroupUsingDELETE1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAppServerGroupUsingDELETE1NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAppServerGroupUsingDELETE1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAppServerGroupUsingDELETE1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAppServerGroupUsingDELETE1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAppServerGroupUsingDELETE1TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAppServerGroupUsingDELETE1NoContent creates a DeleteAppServerGroupUsingDELETE1NoContent with default headers values
func NewDeleteAppServerGroupUsingDELETE1NoContent() *DeleteAppServerGroupUsingDELETE1NoContent {
	return &DeleteAppServerGroupUsingDELETE1NoContent{}
}

/* DeleteAppServerGroupUsingDELETE1NoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteAppServerGroupUsingDELETE1NoContent struct {
}

func (o *DeleteAppServerGroupUsingDELETE1NoContent) Error() string {
	return fmt.Sprintf("[DELETE /mgmtconfig/v1/admin/customers/{customerId}/serverGroup/{groupId}][%d] deleteAppServerGroupUsingDELETE1NoContent ", 204)
}

func (o *DeleteAppServerGroupUsingDELETE1NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppServerGroupUsingDELETE1BadRequest creates a DeleteAppServerGroupUsingDELETE1BadRequest with default headers values
func NewDeleteAppServerGroupUsingDELETE1BadRequest() *DeleteAppServerGroupUsingDELETE1BadRequest {
	return &DeleteAppServerGroupUsingDELETE1BadRequest{}
}

/* DeleteAppServerGroupUsingDELETE1BadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type DeleteAppServerGroupUsingDELETE1BadRequest struct {
}

func (o *DeleteAppServerGroupUsingDELETE1BadRequest) Error() string {
	return fmt.Sprintf("[DELETE /mgmtconfig/v1/admin/customers/{customerId}/serverGroup/{groupId}][%d] deleteAppServerGroupUsingDELETE1BadRequest ", 400)
}

func (o *DeleteAppServerGroupUsingDELETE1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppServerGroupUsingDELETE1Unauthorized creates a DeleteAppServerGroupUsingDELETE1Unauthorized with default headers values
func NewDeleteAppServerGroupUsingDELETE1Unauthorized() *DeleteAppServerGroupUsingDELETE1Unauthorized {
	return &DeleteAppServerGroupUsingDELETE1Unauthorized{}
}

/* DeleteAppServerGroupUsingDELETE1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAppServerGroupUsingDELETE1Unauthorized struct {
}

func (o *DeleteAppServerGroupUsingDELETE1Unauthorized) Error() string {
	return fmt.Sprintf("[DELETE /mgmtconfig/v1/admin/customers/{customerId}/serverGroup/{groupId}][%d] deleteAppServerGroupUsingDELETE1Unauthorized ", 401)
}

func (o *DeleteAppServerGroupUsingDELETE1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppServerGroupUsingDELETE1Forbidden creates a DeleteAppServerGroupUsingDELETE1Forbidden with default headers values
func NewDeleteAppServerGroupUsingDELETE1Forbidden() *DeleteAppServerGroupUsingDELETE1Forbidden {
	return &DeleteAppServerGroupUsingDELETE1Forbidden{}
}

/* DeleteAppServerGroupUsingDELETE1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAppServerGroupUsingDELETE1Forbidden struct {
}

func (o *DeleteAppServerGroupUsingDELETE1Forbidden) Error() string {
	return fmt.Sprintf("[DELETE /mgmtconfig/v1/admin/customers/{customerId}/serverGroup/{groupId}][%d] deleteAppServerGroupUsingDELETE1Forbidden ", 403)
}

func (o *DeleteAppServerGroupUsingDELETE1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppServerGroupUsingDELETE1TooManyRequests creates a DeleteAppServerGroupUsingDELETE1TooManyRequests with default headers values
func NewDeleteAppServerGroupUsingDELETE1TooManyRequests() *DeleteAppServerGroupUsingDELETE1TooManyRequests {
	return &DeleteAppServerGroupUsingDELETE1TooManyRequests{}
}

/* DeleteAppServerGroupUsingDELETE1TooManyRequests describes a response with status code 429, with default header values.

TooManyRequest
*/
type DeleteAppServerGroupUsingDELETE1TooManyRequests struct {
}

func (o *DeleteAppServerGroupUsingDELETE1TooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /mgmtconfig/v1/admin/customers/{customerId}/serverGroup/{groupId}][%d] deleteAppServerGroupUsingDELETE1TooManyRequests ", 429)
}

func (o *DeleteAppServerGroupUsingDELETE1TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
