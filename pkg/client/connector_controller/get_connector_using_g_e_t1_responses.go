// Code generated by go-swagger; DO NOT EDIT.

package connector_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haarchri/zpa-go-client/pkg/models"
)

// GetConnectorUsingGET1Reader is a Reader for the GetConnectorUsingGET1 structure.
type GetConnectorUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConnectorUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConnectorUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetConnectorUsingGET1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetConnectorUsingGET1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConnectorUsingGET1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConnectorUsingGET1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetConnectorUsingGET1TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetConnectorUsingGET1OK creates a GetConnectorUsingGET1OK with default headers values
func NewGetConnectorUsingGET1OK() *GetConnectorUsingGET1OK {
	return &GetConnectorUsingGET1OK{}
}

/* GetConnectorUsingGET1OK describes a response with status code 200, with default header values.

OK
*/
type GetConnectorUsingGET1OK struct {
	Payload *models.Connector
}

func (o *GetConnectorUsingGET1OK) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v1/admin/customers/{customerId}/connector/{connectorId}][%d] getConnectorUsingGET1OK  %+v", 200, o.Payload)
}
func (o *GetConnectorUsingGET1OK) GetPayload() *models.Connector {
	return o.Payload
}

func (o *GetConnectorUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Connector)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConnectorUsingGET1BadRequest creates a GetConnectorUsingGET1BadRequest with default headers values
func NewGetConnectorUsingGET1BadRequest() *GetConnectorUsingGET1BadRequest {
	return &GetConnectorUsingGET1BadRequest{}
}

/* GetConnectorUsingGET1BadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type GetConnectorUsingGET1BadRequest struct {
}

func (o *GetConnectorUsingGET1BadRequest) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v1/admin/customers/{customerId}/connector/{connectorId}][%d] getConnectorUsingGET1BadRequest ", 400)
}

func (o *GetConnectorUsingGET1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectorUsingGET1Unauthorized creates a GetConnectorUsingGET1Unauthorized with default headers values
func NewGetConnectorUsingGET1Unauthorized() *GetConnectorUsingGET1Unauthorized {
	return &GetConnectorUsingGET1Unauthorized{}
}

/* GetConnectorUsingGET1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetConnectorUsingGET1Unauthorized struct {
}

func (o *GetConnectorUsingGET1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v1/admin/customers/{customerId}/connector/{connectorId}][%d] getConnectorUsingGET1Unauthorized ", 401)
}

func (o *GetConnectorUsingGET1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectorUsingGET1Forbidden creates a GetConnectorUsingGET1Forbidden with default headers values
func NewGetConnectorUsingGET1Forbidden() *GetConnectorUsingGET1Forbidden {
	return &GetConnectorUsingGET1Forbidden{}
}

/* GetConnectorUsingGET1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetConnectorUsingGET1Forbidden struct {
}

func (o *GetConnectorUsingGET1Forbidden) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v1/admin/customers/{customerId}/connector/{connectorId}][%d] getConnectorUsingGET1Forbidden ", 403)
}

func (o *GetConnectorUsingGET1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectorUsingGET1NotFound creates a GetConnectorUsingGET1NotFound with default headers values
func NewGetConnectorUsingGET1NotFound() *GetConnectorUsingGET1NotFound {
	return &GetConnectorUsingGET1NotFound{}
}

/* GetConnectorUsingGET1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetConnectorUsingGET1NotFound struct {
}

func (o *GetConnectorUsingGET1NotFound) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v1/admin/customers/{customerId}/connector/{connectorId}][%d] getConnectorUsingGET1NotFound ", 404)
}

func (o *GetConnectorUsingGET1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConnectorUsingGET1TooManyRequests creates a GetConnectorUsingGET1TooManyRequests with default headers values
func NewGetConnectorUsingGET1TooManyRequests() *GetConnectorUsingGET1TooManyRequests {
	return &GetConnectorUsingGET1TooManyRequests{}
}

/* GetConnectorUsingGET1TooManyRequests describes a response with status code 429, with default header values.

TooManyRequest
*/
type GetConnectorUsingGET1TooManyRequests struct {
}

func (o *GetConnectorUsingGET1TooManyRequests) Error() string {
	return fmt.Sprintf("[GET /mgmtconfig/v1/admin/customers/{customerId}/connector/{connectorId}][%d] getConnectorUsingGET1TooManyRequests ", 429)
}

func (o *GetConnectorUsingGET1TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
