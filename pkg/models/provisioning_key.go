// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProvisioningKey provisioning key
//
// swagger:model Provisioning Key
type ProvisioningKey struct {

	// app connector group Id
	AppConnectorGroupID string `json:"appConnectorGroupId,omitempty"`

	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	AppConnectorGroupName string `json:"appConnectorGroupName,omitempty"`

	// creation time
	CreationTime string `json:"creationTime,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// enrollment cert Id
	// Required: true
	EnrollmentCertID *string `json:"enrollmentCertId"`

	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	EnrollmentCertName string `json:"enrollmentCertName,omitempty"`

	// expiration in epoch sec
	ExpirationInEpochSec string `json:"expirationInEpochSec,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// ip Acl
	IPACL []string `json:"ipAcl"`

	// max usage
	// Required: true
	MaxUsage *string `json:"maxUsage"`

	// modified by
	ModifiedBy string `json:"modifiedBy,omitempty"`

	// modified time
	ModifiedTime string `json:"modifiedTime,omitempty"`

	// name
	// Required: true
	Name *string `json:"name"`

	// read only field. Ignored in PUT/POST calls.
	ProvisioningKey string `json:"provisioningKey,omitempty"`

	// ui config
	UIConfig string `json:"uiConfig,omitempty"`

	// defaults to 0
	UsageCount string `json:"usageCount,omitempty"`

	// zcomponent Id
	ZcomponentID string `json:"zcomponentId,omitempty"`

	// Read only property. Applicable only for GET calls, ignored in PUT/POST calls.
	ZcomponentName string `json:"zcomponentName,omitempty"`
}

// Validate validates this provisioning key
func (m *ProvisioningKey) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnrollmentCertID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaxUsage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProvisioningKey) validateEnrollmentCertID(formats strfmt.Registry) error {

	if err := validate.Required("enrollmentCertId", "body", m.EnrollmentCertID); err != nil {
		return err
	}

	return nil
}

func (m *ProvisioningKey) validateMaxUsage(formats strfmt.Registry) error {

	if err := validate.Required("maxUsage", "body", m.MaxUsage); err != nil {
		return err
	}

	return nil
}

func (m *ProvisioningKey) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this provisioning key based on context it is used
func (m *ProvisioningKey) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProvisioningKey) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProvisioningKey) UnmarshalBinary(b []byte) error {
	var res ProvisioningKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
