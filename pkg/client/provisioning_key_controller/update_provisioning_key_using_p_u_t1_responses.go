// Code generated by go-swagger; DO NOT EDIT.

package provisioning_key_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateProvisioningKeyUsingPUT1Reader is a Reader for the UpdateProvisioningKeyUsingPUT1 structure.
type UpdateProvisioningKeyUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProvisioningKeyUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateProvisioningKeyUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateProvisioningKeyUsingPUT1NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProvisioningKeyUsingPUT1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateProvisioningKeyUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateProvisioningKeyUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateProvisioningKeyUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateProvisioningKeyUsingPUT1TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateProvisioningKeyUsingPUT1Created creates a UpdateProvisioningKeyUsingPUT1Created with default headers values
func NewUpdateProvisioningKeyUsingPUT1Created() *UpdateProvisioningKeyUsingPUT1Created {
	return &UpdateProvisioningKeyUsingPUT1Created{}
}

/* UpdateProvisioningKeyUsingPUT1Created describes a response with status code 201, with default header values.

Created
*/
type UpdateProvisioningKeyUsingPUT1Created struct {
}

func (o *UpdateProvisioningKeyUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/associationType/{associationType}/provisioningKey/{provisioningKeyId}][%d] updateProvisioningKeyUsingPUT1Created ", 201)
}

func (o *UpdateProvisioningKeyUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProvisioningKeyUsingPUT1NoContent creates a UpdateProvisioningKeyUsingPUT1NoContent with default headers values
func NewUpdateProvisioningKeyUsingPUT1NoContent() *UpdateProvisioningKeyUsingPUT1NoContent {
	return &UpdateProvisioningKeyUsingPUT1NoContent{}
}

/* UpdateProvisioningKeyUsingPUT1NoContent describes a response with status code 204, with default header values.

No Content
*/
type UpdateProvisioningKeyUsingPUT1NoContent struct {
}

func (o *UpdateProvisioningKeyUsingPUT1NoContent) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/associationType/{associationType}/provisioningKey/{provisioningKeyId}][%d] updateProvisioningKeyUsingPUT1NoContent ", 204)
}

func (o *UpdateProvisioningKeyUsingPUT1NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProvisioningKeyUsingPUT1BadRequest creates a UpdateProvisioningKeyUsingPUT1BadRequest with default headers values
func NewUpdateProvisioningKeyUsingPUT1BadRequest() *UpdateProvisioningKeyUsingPUT1BadRequest {
	return &UpdateProvisioningKeyUsingPUT1BadRequest{}
}

/* UpdateProvisioningKeyUsingPUT1BadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type UpdateProvisioningKeyUsingPUT1BadRequest struct {
}

func (o *UpdateProvisioningKeyUsingPUT1BadRequest) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/associationType/{associationType}/provisioningKey/{provisioningKeyId}][%d] updateProvisioningKeyUsingPUT1BadRequest ", 400)
}

func (o *UpdateProvisioningKeyUsingPUT1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProvisioningKeyUsingPUT1Unauthorized creates a UpdateProvisioningKeyUsingPUT1Unauthorized with default headers values
func NewUpdateProvisioningKeyUsingPUT1Unauthorized() *UpdateProvisioningKeyUsingPUT1Unauthorized {
	return &UpdateProvisioningKeyUsingPUT1Unauthorized{}
}

/* UpdateProvisioningKeyUsingPUT1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateProvisioningKeyUsingPUT1Unauthorized struct {
}

func (o *UpdateProvisioningKeyUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/associationType/{associationType}/provisioningKey/{provisioningKeyId}][%d] updateProvisioningKeyUsingPUT1Unauthorized ", 401)
}

func (o *UpdateProvisioningKeyUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProvisioningKeyUsingPUT1Forbidden creates a UpdateProvisioningKeyUsingPUT1Forbidden with default headers values
func NewUpdateProvisioningKeyUsingPUT1Forbidden() *UpdateProvisioningKeyUsingPUT1Forbidden {
	return &UpdateProvisioningKeyUsingPUT1Forbidden{}
}

/* UpdateProvisioningKeyUsingPUT1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateProvisioningKeyUsingPUT1Forbidden struct {
}

func (o *UpdateProvisioningKeyUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/associationType/{associationType}/provisioningKey/{provisioningKeyId}][%d] updateProvisioningKeyUsingPUT1Forbidden ", 403)
}

func (o *UpdateProvisioningKeyUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProvisioningKeyUsingPUT1NotFound creates a UpdateProvisioningKeyUsingPUT1NotFound with default headers values
func NewUpdateProvisioningKeyUsingPUT1NotFound() *UpdateProvisioningKeyUsingPUT1NotFound {
	return &UpdateProvisioningKeyUsingPUT1NotFound{}
}

/* UpdateProvisioningKeyUsingPUT1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateProvisioningKeyUsingPUT1NotFound struct {
}

func (o *UpdateProvisioningKeyUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/associationType/{associationType}/provisioningKey/{provisioningKeyId}][%d] updateProvisioningKeyUsingPUT1NotFound ", 404)
}

func (o *UpdateProvisioningKeyUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProvisioningKeyUsingPUT1TooManyRequests creates a UpdateProvisioningKeyUsingPUT1TooManyRequests with default headers values
func NewUpdateProvisioningKeyUsingPUT1TooManyRequests() *UpdateProvisioningKeyUsingPUT1TooManyRequests {
	return &UpdateProvisioningKeyUsingPUT1TooManyRequests{}
}

/* UpdateProvisioningKeyUsingPUT1TooManyRequests describes a response with status code 429, with default header values.

TooManyRequest
*/
type UpdateProvisioningKeyUsingPUT1TooManyRequests struct {
}

func (o *UpdateProvisioningKeyUsingPUT1TooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /mgmtconfig/v1/admin/customers/{customerId}/associationType/{associationType}/provisioningKey/{provisioningKeyId}][%d] updateProvisioningKeyUsingPUT1TooManyRequests ", 429)
}

func (o *UpdateProvisioningKeyUsingPUT1TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
