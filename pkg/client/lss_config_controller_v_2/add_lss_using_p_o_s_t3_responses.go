// Code generated by go-swagger; DO NOT EDIT.

package lss_config_controller_v_2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haarchri/zpa-go-client/pkg/models"
)

// AddLssUsingPOST3Reader is a Reader for the AddLssUsingPOST3 structure.
type AddLssUsingPOST3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddLssUsingPOST3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddLssUsingPOST3Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddLssUsingPOST3BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddLssUsingPOST3Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddLssUsingPOST3Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddLssUsingPOST3NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddLssUsingPOST3TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddLssUsingPOST3Created creates a AddLssUsingPOST3Created with default headers values
func NewAddLssUsingPOST3Created() *AddLssUsingPOST3Created {
	return &AddLssUsingPOST3Created{}
}

/* AddLssUsingPOST3Created describes a response with status code 201, with default header values.

Created
*/
type AddLssUsingPOST3Created struct {
	Payload *models.LssResource
}

func (o *AddLssUsingPOST3Created) Error() string {
	return fmt.Sprintf("[POST /mgmtconfig/v2/admin/customers/{customerId}/lssConfig][%d] addLssUsingPOST3Created  %+v", 201, o.Payload)
}
func (o *AddLssUsingPOST3Created) GetPayload() *models.LssResource {
	return o.Payload
}

func (o *AddLssUsingPOST3Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LssResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddLssUsingPOST3BadRequest creates a AddLssUsingPOST3BadRequest with default headers values
func NewAddLssUsingPOST3BadRequest() *AddLssUsingPOST3BadRequest {
	return &AddLssUsingPOST3BadRequest{}
}

/* AddLssUsingPOST3BadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type AddLssUsingPOST3BadRequest struct {
}

func (o *AddLssUsingPOST3BadRequest) Error() string {
	return fmt.Sprintf("[POST /mgmtconfig/v2/admin/customers/{customerId}/lssConfig][%d] addLssUsingPOST3BadRequest ", 400)
}

func (o *AddLssUsingPOST3BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddLssUsingPOST3Unauthorized creates a AddLssUsingPOST3Unauthorized with default headers values
func NewAddLssUsingPOST3Unauthorized() *AddLssUsingPOST3Unauthorized {
	return &AddLssUsingPOST3Unauthorized{}
}

/* AddLssUsingPOST3Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddLssUsingPOST3Unauthorized struct {
}

func (o *AddLssUsingPOST3Unauthorized) Error() string {
	return fmt.Sprintf("[POST /mgmtconfig/v2/admin/customers/{customerId}/lssConfig][%d] addLssUsingPOST3Unauthorized ", 401)
}

func (o *AddLssUsingPOST3Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddLssUsingPOST3Forbidden creates a AddLssUsingPOST3Forbidden with default headers values
func NewAddLssUsingPOST3Forbidden() *AddLssUsingPOST3Forbidden {
	return &AddLssUsingPOST3Forbidden{}
}

/* AddLssUsingPOST3Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddLssUsingPOST3Forbidden struct {
}

func (o *AddLssUsingPOST3Forbidden) Error() string {
	return fmt.Sprintf("[POST /mgmtconfig/v2/admin/customers/{customerId}/lssConfig][%d] addLssUsingPOST3Forbidden ", 403)
}

func (o *AddLssUsingPOST3Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddLssUsingPOST3NotFound creates a AddLssUsingPOST3NotFound with default headers values
func NewAddLssUsingPOST3NotFound() *AddLssUsingPOST3NotFound {
	return &AddLssUsingPOST3NotFound{}
}

/* AddLssUsingPOST3NotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddLssUsingPOST3NotFound struct {
}

func (o *AddLssUsingPOST3NotFound) Error() string {
	return fmt.Sprintf("[POST /mgmtconfig/v2/admin/customers/{customerId}/lssConfig][%d] addLssUsingPOST3NotFound ", 404)
}

func (o *AddLssUsingPOST3NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddLssUsingPOST3TooManyRequests creates a AddLssUsingPOST3TooManyRequests with default headers values
func NewAddLssUsingPOST3TooManyRequests() *AddLssUsingPOST3TooManyRequests {
	return &AddLssUsingPOST3TooManyRequests{}
}

/* AddLssUsingPOST3TooManyRequests describes a response with status code 429, with default header values.

TooManyRequest
*/
type AddLssUsingPOST3TooManyRequests struct {
}

func (o *AddLssUsingPOST3TooManyRequests) Error() string {
	return fmt.Sprintf("[POST /mgmtconfig/v2/admin/customers/{customerId}/lssConfig][%d] addLssUsingPOST3TooManyRequests ", 429)
}

func (o *AddLssUsingPOST3TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
